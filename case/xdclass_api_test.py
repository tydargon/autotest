# coding = utf-8import datetimefrom util.db_util import MysqlDbclass XdclassTestCase:    def loadAllCaseByApp(self, app):        '''        根据app加载所有测试用例        '''        print('loadAllCaseByApp')        my_db = MysqlDb()        sql = "select * from `case` where app='{0}'".format(app)        results = my_db.query(sql)        return results    def findCaseById(self, case_id):        '''        根据id找测试用例        '''        print('findCaseById')        my_db = MysqlDb()        sql = "select * from `case` where id = '{0}'".format(case_id)        results = my_db.query(sql, state = 'one')        return results    def loadConfigByAppandKey(self, app, key):        '''        根据app和key加载配置        '''        print('loadConfigByAppandKey')        my_db = MysqlDb()        sql = "select * from `config` where app='{0}' and dict_key='{1}'".format(app, key)        results = my_db.query(sql)        return results    def updateResultByCaseId(self, response, is_pass, msg, case_id):        '''        根据测试用例id，更新响应内容和测试内容        '''        print('updateResultByCaseId')        my_db = MysqlDb()        current_time = datetime.datetime.strftime('%Y-%m-%d %H:%M:%D')        print(current_time)        if is_pass:            sql = "update `case` set response='{0}', is_pass = '{1}', msg = '{2}', update_time='{3}' where id = '{4}'".format("", is_pass, msg, case_id)        else:            sql = "update `case` set response=\'{0}\', is_pass = '{1}', msg = '{2}', update_time='{3}' where id = '{4}'".format(str(response), is_pass, msg, case_id)        rows = my_db.execute(sql)        return rows    def RunAllCase(self, app):        '''        执行全部用例的入口        '''        print('RunAllCase')        api_host_obj = self.loadConfigByAppandKey(app, 'host')        results = self.loadAllCaseByApp(app)        for case in results:            if case['run'] == 'yes':                try:                    #执行用例                    resphonse = self.RunCase(case, api_host_obj)                    #断言                    assert_msg = self.assertResponse(case, resphonse)                    #更新结果存储数据库                    rows = self.updateResultByCaseId(resphonse, assert_msg['is_pass'], assert_msg['msg'], case['id'])                    print('更新结果 rows={0}'.format(str(rows)))                except Exception as e:                    print('用例id={0}，标题：{1}，执行错误：{2}'.format(case['id'], case['title'], e))        #发送测试报告        self.sendTestReport(app)    def RunCase(self, api_host_obj):        '''        执行单个用例        '''        print('RunCase')        my_db = MysqlDb()    def assertResponse(self, case, response):        '''        断言响应内容，更新用例执行情况        '''        print('assertResponse')    def sendTestReport(self, app):        '''        发送邮件，测试报告        '''        print('sendTestReport')if __name__ == '__main__':    print('main')    test = XdclassTestCase()    # results = test.loadAllCaseByApp('小滴课堂')    # results = test.findCaseById(5)    # results = test.loadConfigByAppandKey('小滴课堂', 'host')    results = test.RunAllCase('小滴课堂')    print(results)